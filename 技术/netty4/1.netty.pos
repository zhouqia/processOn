{"diagram":{"image":{"height":200,"pngdata":"iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAsUlEQVR4nO3BAQEAAACCIP+vbkhAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8GXHmAAFMgHIEAAAAAElFTkSuQmCC","width":200,"y":0,"x":0},"elements":{"id":"root","title":"netty","leftChildren":[],"structure":"mind_free","root":true,"theme":"theme3","children":[{"id":"1e14906c8c85","title":"netty是什么","parent":"root","children":[{"id":"150f7d8a3d37","title":"netty是一款高性能的NIO网络框架","parent":"1e14906c8c85","children":[]}]},{"id":"f68821206c19","title":"特点","parent":"root","children":[{"id":"25548c7c7ac3","title":"a.高性能，低延迟","parent":"f68821206c19","children":[]},{"id":"d52e378719f9","title":"b.完美的弥补了java NIO的缺陷","children":[{"id":"73a208c1848f","title":"1.易用性","children":[{"id":"28c5ae7e6481","title":"在java nio基础上进行了更高级的封装，降低使用的复杂度，同时增加了很多开箱即用的工具<br>","parent":"73a208c1848f","children":[]}],"parent":"d52e378719f9"},{"id":"3e9dc1e3c9d1","title":"2.稳定性","parent":"d52e378719f9","children":[{"id":"c0891d6124d1","title":"解决了java nio的一些问题，比如select空转导致cpu100%，TCP断线重连，keep-alive检测等<br>","parent":"3e9dc1e3c9d1","children":[]}]},{"id":"0808b935b55a","title":"3.可扩展性","parent":"d52e378719f9","children":[{"id":"4d0938c864b5","title":"线程可配置，组件可配置","children":[],"parent":"0808b935b55a"}]}],"parent":"f68821206c19"},{"id":"6c7ab3b13945","title":"c.更低的资源消耗","children":[{"id":"23ba61ba15e7","title":"1.零拷贝 - 堆外内存","children":[],"parent":"6c7ab3b13945"},{"id":"15c375748280","title":"2.对象池复用技术 - 复用对象","parent":"6c7ab3b13945","children":[]}],"parent":"f68821206c19"}]},{"id":"222aa1b6fbe6","title":"i/o调用过程","free":true,"parent":"root","children":[{"id":"aab8a200d0eb","title":"a.用户进程向内核发起系统调用请求 - 调用阶段<br>","children":[],"parent":"222aa1b6fbe6"},{"id":"ea69b3f4821b","title":"b.内核等到i/o请求处理完成返回结果 - 执行阶段<br>","parent":"222aa1b6fbe6","children":[{"id":"d2c7eff6a9f0","title":"1.等待数据就绪，并写入内核缓冲区<br>","parent":"ea69b3f4821b","children":[]},{"id":"a3a0c3e282f0","title":"2.将内核缓冲区数据拷贝到用户态缓冲区<br>","parent":"ea69b3f4821b","children":[]}],"summaries":[{"summary":true,"id":"b4e5dead3173","title":"","range":"0,1","style":{"lineType":"curve_complex","lineColor":"#bf1e1b","lineWidth":"1"},"image":{"w":418,"h":88,"url":"http://cdn.processon.com/5fa9031ee401fd45d10b3479?e=1604915502&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:AoYrpn_dyA6-l2inFsnZsTWmSoo="},"parent":"ea69b3f4821b","children":[]}]}],"pos":{"y":9637.100189208984,"x":9909.200012207031},"collapsed":true},{"id":"a1fe90848a63","free":true,"title":"IO模型","children":[{"id":"2e6835b20e86","title":"a.同步阻塞 - BIO","children":[],"parent":"a1fe90848a63"},{"id":"caae16699b90","title":"b.同步非阻塞 - NIO","parent":"a1fe90848a63","children":[{"id":"9e725434363e","title":"","image":{"w":322,"url":"http://cdn.processon.com/5fa9045d079129448c970bca?e=1604915821&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:P_KwgNxdepC2Pe-VtKw9RACAtNI=","h":150},"parent":"caae16699b90","children":[{"id":"4ecb44fa122c","title":"频繁的上下文切换，性能损耗严重","children":[],"parent":"9e725434363e"}]}],"collapsed":false},{"id":"ed08c2ae4145","title":"c.IO多路复用","parent":"a1fe90848a63","children":[{"id":"ca59cb2b1f51","title":"","children":[{"id":"acbc70e93ea1","title":"一个线程监听多个io句柄<br>","parent":"ca59cb2b1f51","children":[{"id":"522ca2679022","title":"select","children":[],"parent":"acbc70e93ea1"},{"id":"a58c00921f02","title":"poll","children":[],"parent":"acbc70e93ea1"},{"id":"f8797fcbe2b8","title":"epoll","children":[],"parent":"acbc70e93ea1"}]}],"parent":"ed08c2ae4145","image":{"w":297,"url":"http://cdn.processon.com/5fa90673079129448c97168a?e=1604916355&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:umToixE-1WNCWqVHQYtAqOaRuwc=","h":157}}]},{"id":"e23339354d9e","title":"d.信号驱动 I/O","parent":"a1fe90848a63","children":[{"id":"eb6802625630","title":"内核通知何时可以开始一个 I/O 操作<br>","parent":"e23339354d9e","children":[]}]},{"id":"5d5efe8b302f","title":"e.异步非阻塞","children":[{"id":"296bbe1ad8a4","title":"内核通知 I/O 操作何时已经完成","children":[],"parent":"5d5efe8b302f"}],"parent":"a1fe90848a63"}],"parent":"root","collapsed":true,"pos":{"y":10181.500213623047,"x":9946.800018310547}}]}},"meta":{"id":"5fa900545653bb2563510841","member":"5b8deb14e4b06fc64ae2c0eb","exportTime":"2020-11-18 16:36:13","diagramInfo":{"category":"mind_free","title":"1.netty","created":"2020-11-09 16:39:48","creator":"5b8deb14e4b06fc64ae2c0eb","modified":"2020-11-10 14:22:13"},"type":"ProcessOn Schema File","version":"1.0"}}