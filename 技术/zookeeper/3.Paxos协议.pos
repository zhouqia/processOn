{"diagram":{"image":{"height":200,"pngdata":"iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAsUlEQVR4nO3BAQEAAACCIP+vbkhAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8GXHmAAFMgHIEAAAAAElFTkSuQmCC","width":200,"y":0,"x":0},"elements":{"id":"root","title":"Paxos协议","leftChildren":[],"structure":"mind_free","root":true,"theme":"theme3","children":[{"id":"43a0aff2bf60","title":"分布式一致性算法","parent":"root","children":[{"id":"5da4244647a2","title":"与传统主备方式最大的区别 -&nbsp;Paxos只需超过半数的副本在线且相互通信正常，就可以保证服务的持续可用，且数据不丢失。<br>","parent":"43a0aff2bf60","children":[]}]},{"id":"56aaf5600d1b","title":"角色","parent":"root","children":[{"id":"89b2f05d8c02","title":"提议者(多个)","parent":"56aaf5600d1b","children":[{"id":"a44ebfc6f8bc","title":"发起事务性请求，并统计，统计过半决策者认可，则再次发送执行命令请求","children":[],"parent":"89b2f05d8c02"}]},{"id":"bff519466c40","title":"决策者(多个)","parent":"56aaf5600d1b","children":[{"id":"00bfeaa39f82","title":"参与决策，超过半数认可，则认为该事务性请求可以在本地执行","children":[],"parent":"bff519466c40"}]},{"id":"4a807d562363","title":"学习者(多个)","parent":"56aaf5600d1b","children":[{"id":"1b746f0148ef","title":"决策者同步数据给学习者","children":[],"parent":"4a807d562363"}]}]},{"id":"2944ba9ae27a","title":"与zab协议的区别","children":[{"id":"cbe0cec07611","title":"zab协议是对paxos的简化","children":[],"parent":"2944ba9ae27a"},{"id":"8225aa7da834","title":"投票 ： zab协议 - 投票发起者只能是leader； paxos - 投票发起者可以是任意提议者","children":[],"parent":"2944ba9ae27a"},{"id":"49ff18aea285","title":"数据同步 ： zab协议 - leader负责同步数据给其他节点；paxos - 决策者负责同步数据给学习者","children":[],"parent":"2944ba9ae27a"}],"parent":"root"},{"id":"49104b3e1cc6","title":"与raft协议的区别<br>","parent":"root","children":[{"id":"3b706468079c","title":"raft更简单，容易理解","children":[],"parent":"49104b3e1cc6"},{"id":"4a3260fc6303","title":"raft核心","children":[{"id":"3847dd6fdebc","title":"选举","children":[],"parent":"4a3260fc6303"},{"id":"ee7b96ec9250","title":"日志(提议)复制","children":[],"parent":"4a3260fc6303"},{"id":"8caa76dd33f2","title":"安全性 - 半数赞成","children":[],"parent":"4a3260fc6303"}],"parent":"49104b3e1cc6"},{"id":"ae49f37f8f3d","title":"raft强调了leader的地位，leader在时，由leader向follower同步日志(提议)<br>","children":[],"parent":"49104b3e1cc6"}]},{"id":"3b37edfd51d3","title":"发展","parent":"root","children":[{"id":"eec9e6f0ddf5","title":"zab协议","parent":"3b37edfd51d3","children":[]},{"id":"31149f093b41","title":"raft协议","parent":"3b37edfd51d3","children":[]}],"summaries":[{"summary":true,"id":"906f32e0a714","title":"异同","range":"0,1","style":{"lineType":"curve_complex","lineColor":"#bf1e1b","lineWidth":"1"},"parent":"3b37edfd51d3","children":[{"id":"0faeeb74b6cb","title":"相同点","parent":"906f32e0a714","children":[{"id":"746f830d8b9e","title":"都是一致性算法，采用的策略都是一个leader(发起提案)，过半follower支持即认为可行","parent":"0faeeb74b6cb","children":[]},{"id":"758be94f2991","title":"都存在&nbsp; leader选举，事务同步<br>","parent":"0faeeb74b6cb","children":[]}]},{"id":"70d4f477f88c","title":"不同点","parent":"906f32e0a714","children":[{"id":"88bed3138b1e","title":"选举逻辑不通，raft存在split vote现象(没有收到过提案)","children":[{"id":"3908e74ecb00","title":"raft协议每轮投票间隔时间不等","parent":"88bed3138b1e","children":[]},{"id":"f8e2a60612e7","title":"zab协议每轮投票后，立刻发起下轮投票","parent":"88bed3138b1e","children":[]}],"parent":"70d4f477f88c"},{"id":"22540923d272","title":"上个年代(轮次)的leader残留的数据的处理方案不同(两类数据:已过半复制的日志 和 未过半复制的日志)<br>","parent":"70d4f477f88c","children":[{"id":"ec944566189b","title":"raft采取保守策略，全部判定为未提交<br>","parent":"22540923d272","children":[{"id":"11b7abf1a8de","title":"选举后没有数据同步逻辑兜底","children":[],"parent":"ec944566189b"}]},{"id":"b55afe5cffa8","title":"zab采取激进策略，全部判定为已提交<br>","parent":"22540923d272","children":[{"id":"45edfbfa1600","title":"选举后有数据同步逻辑兜底","children":[],"parent":"b55afe5cffa8"}]}]},{"id":"4c229011c70c","title":"日志是否连续","parent":"70d4f477f88c","children":[{"id":"0b6a506e2649","title":"raft日志连续(leader只需要保存follower的事务id，即可找到该下次同步时需要同步的数据)","children":[],"parent":"4c229011c70c"},{"id":"3c9c89584235","title":"zab日志不连续(leader在同步数据给follower的时候需要阻塞一段时间，来统计leader和follower事务的差异性，根据不同类型的差异，采取不同的策略)<br>","children":[],"parent":"4c229011c70c"}]},{"id":"4539678b9870","title":"阻止上一轮次leader假死的方式","children":[{"id":"3809ddf79027","title":"zab协议下，follower直接断开与旧leader的连接","children":[],"parent":"4539678b9870"},{"id":"e4a72f014c8b","title":"raft协议下，follower会比较leader发送的请求中的年代(轮次)，若是旧leader则直接忽略<br>","children":[],"parent":"4539678b9870"}],"parent":"70d4f477f88c"}]}]}]}]}},"meta":{"id":"5fb3c00a1e08536877185120","member":"5b8deb14e4b06fc64ae2c0eb","exportTime":"2020-11-18 16:34:34","diagramInfo":{"category":"mind_free","title":"3.Paxos协议","created":"2020-11-17 20:20:27","creator":"5b8deb14e4b06fc64ae2c0eb","modified":"2020-11-18 16:21:02"},"type":"ProcessOn Schema File","version":"1.0"}}